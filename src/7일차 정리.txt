7일차
벨만포드 - 나오기 어려움
플로이드워셜 - 시간복잡도 V^3이라 정점 개수 매우 작게 주어져서 알아보기 쉬워서 잘 안냄
다익스트라가 응용하기도 좋아서 자주 나옴

P2458
//플로이드워셜로도 풀 수 있다 = N이 작기 때문 - 최소 비용 구하는 문제
//트리를 순회하는 것으로도 풀 수 있다.
나에서부터 나가는 애가 몇 명인지를 파악
자식으로 들어갔다가 재귀로 돌아올 때 - 시간 복잡도 O(NE)
dfs 한 번만으로 하기가 쉽지 않을 것
// 깊이우선탐색으로 하겠는가?
    // 스택오버플로가 나지 않을 것인가?
    // outcnt[i] = dfs(i) - 1
    // inCnt[next]++;

Q&A 알고리즘 학습
 - 학습 방법 : 백준 그룹 같은 곳에서 공부하는게 좋다. 풀고나서 다른 사람의 코드를 보는 것이 좋다. 
 혼자 공부하되 백준 사이트 같은 곳에서 다른 사람의 풀이를 유심히 봐라
 
P11266
// 깊이우선탐색으로 한다
// 가능할까? - 깊이 1만밖에 안되서 가능할 것
// 시간복잡도 O((V+E) * V) 
order가 visited flag 역할도 겸한다.
order를 초기화 하므로 dfs를 돌면서 방문했던 곳을 다시 방문하지 않는다.

알아야하는 내용
키순서 그래프이론 : 들어오는 개수와 나가는 개수 카운트, 정점 
최단경로 알고리즘 : 다익스트라, 벨만포드, 플로이드워셜
다익스트라 : 어떤 시작 정점 1개 => 모든 정점 최단 경로(최소비용, 음수가중치 x)
벨만포드 : 어떤 시작 정점 1개 => 모든 정점 최단 경로(최소비용, 음수가중치 존재, 음수사이클이 존재하면 최소비용 없음(구할 수 없다))
플로이드 : 모든 정점에서 모든 다른 정점으로 최소비용(k,i,j)(음수가중치 존재, 음수사이클 없어야 함)

dijk : O(ElogV)
벨만 : O(VE)
플로이드 : O(V^3)

다익스트라 알고리즘 응용 종류
간선의 방향이 있는 그래프에서, 시작 정점에서부터 다른 모든 정점까지 왕복하는 최소비용
다익스트라는 시작 정점이 하나로 고정, <<돌아올 때 간선의 방향을 뒤집음!!!!>> 다익스트라 2회로 문제 해결(간선 방향 뒤집기)


