정수론 = 수학적 센스
조합론 - 그래프 + 동적계획법

그래프
방향이 있느냐 없느냐가 매우 중요
in-degree : 들어오는 간선
out-degree : 나가는 간선   이 둘은 위상정렬에 쓰임

경로 : 정점과 간선이 교대로 구성된 sequence 경로는 매우 ㅁ많다.
회로 : 시작 정점과 끝 정점이 같은 경로

그래프를 코드로 표현
엣지에 집중 : 크루스칼 알고리즘?
인접 행렬 : 2차원 배열 - 공간을 확보해놓고 연결되어있냐 없느냐를 다 쓴다
인접 리스트 : 공간을 확보하지 않는다 - 더 유용한 경우(정점이 많을 수록 공간복잡도 커지고 낭비가 많다)
인접 리스트 공간 복잡도 : V+E

간선 추가할 때 조심할 점
find : root의 번호

union, find 빠르게 동작하려면 경로가 짧아야한다.

2252
1억번 연산 = 1초
N x M = N^2 or M^2
O(N + M) 

신입사원이 갖춰야할 역량 - 알고리즘
입사방법엔 무엇? 
3가지 - 
알고리즘 특강 수료테스트 - PRO 취득 - 개별 연락 - SDS 지원할 의향 있는지 - PRO 전형 - 임원 면접
공채 - 상/하반기 그룹 공채 SW직무 - 직무적합성 평가 + 적성 검사 + 직무 면접 + 임원 면접
SCSA - convergence sw academy - 6개월 동안 sw 듣고 sw 역량테스트 합격 후 입사(공학계열 불가능)

수료테스트 합격률과 난이도
비공개 / 난이도 - 다양한 알고리즘을 다 경험해보고 들어가는게 좋다

SW관련 대외활동이 없어서 고민
본인 스스로 프로젝트를 진행해보는게 좋다. + 핫한 언어를 사용해본 적이 있다.
경험이 가장 중요 너무 신경 쓸 필요 없다.

부서배치는 어떻게 진행?
첼로스퀘어 - 물류 // 클라우드 쪽으로 진행

복리후생?
매우 다양

재택근무?
부서 별로 상이

